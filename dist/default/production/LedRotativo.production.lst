

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sat Sep 02 22:45:36 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 1.43
    17                           ; Generated 25/07/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0007                     _PORTCbits	set	7
   129  0007                     _PORTC	set	7
   130  0006                     _PORTB	set	6
   131  0018                     _RCSTAbits	set	24
   132  0019                     _TXREG	set	25
   133  000C                     _PIR1bits	set	12
   134  0087                     _TRISC	set	135
   135  0086                     _TRISB	set	134
   136  0098                     _TXSTAbits	set	152
   137                           
   138                           	psect	cinit
   139  07F0                     start_initialization:	
   140                           ; #config settings
   141                           
   142  07F0                     __initialization:	
   143                           
   144                           ; Clear objects allocated to COMMON
   145  07F0  01F7               	clrf	__pbssCOMMON& (0+127)
   146  07F1  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   147  07F2  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   148  07F3  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   149  07F4  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   150  07F5  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
   151                           
   152                           ; Clear objects allocated to BANK0
   153  07F6  1283               	bcf	3,5	;RP0=0, select bank0
   154  07F7  1303               	bcf	3,6	;RP1=0, select bank0
   155  07F8  01A0               	clrf	__pbssBANK0& (0+127)
   156  07F9  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   157  07FA  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   158  07FB  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   159  07FC                     end_of_initialization:	
   160                           ;End of C runtime variable initialization code
   161                           
   162  07FC                     __end_of__initialization:	
   163  07FC  0183               	clrf	3
   164  07FD  120A  118A  2CAA   	ljmp	_main	;jump to C main() function
   165                           
   166                           	psect	bssCOMMON
   167  0077                     __pbssCOMMON:	
   168  0077                     _bandera:	
   169  0077                     	ds	2
   170  0079                     _boton2:	
   171  0079                     	ds	2
   172  007B                     _boton1:	
   173  007B                     	ds	2
   174                           
   175                           	psect	bssBANK0
   176  0020                     __pbssBANK0:	
   177  0020                     _boton4:	
   178  0020                     	ds	2
   179  0022                     _boton3:	
   180  0022                     	ds	2
   181                           
   182                           	psect	cstackCOMMON
   183  0070                     __pcstackCOMMON:	
   184  0070                     ?_Secuencia1:	
   185  0070                     ?_cambio:	
   186                           ; 1 bytes @ 0x0
   187                           
   188  0070                     ??_cambio:	
   189                           ; 1 bytes @ 0x0
   190                           
   191  0070                     ?_Secuencia2:	
   192                           ; 1 bytes @ 0x0
   193                           
   194  0070                     ??_Secuencia2:	
   195                           ; 1 bytes @ 0x0
   196                           
   197  0070                     ?_Secuencia3:	
   198                           ; 1 bytes @ 0x0
   199                           
   200  0070                     ??_Secuencia3:	
   201                           ; 1 bytes @ 0x0
   202                           
   203  0070                     ?_Secuencia4:	
   204                           ; 1 bytes @ 0x0
   205                           
   206  0070                     ??_Secuencia4:	
   207                           ; 1 bytes @ 0x0
   208                           
   209  0070                     ?_main:	
   210                           ; 1 bytes @ 0x0
   211                           
   212  0070                     Secuencia1@aux:	
   213                           ; 1 bytes @ 0x0
   214                           
   215                           
   216                           ; 2 bytes @ 0x0
   217  0070                     	ds	2
   218  0072                     ??_Secuencia1:	
   219                           
   220                           ; 1 bytes @ 0x2
   221  0072                     	ds	3
   222  0075                     Secuencia1@band:	
   223                           
   224                           ; 2 bytes @ 0x5
   225  0075                     	ds	2
   226  0077                     ??_main:	
   227                           
   228                           	psect	maintext
   229  04AA                     __pmaintext:	
   230                           ; 1 bytes @ 0x7
   231 ;;
   232 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   233 ;;
   234 ;; *************** function _main *****************
   235 ;; Defined at:
   236 ;;		line 30 in file "LedRotativo.c"
   237 ;; Parameters:    Size  Location     Type
   238 ;;		None
   239 ;; Auto vars:     Size  Location     Type
   240 ;;		None
   241 ;; Return value:  Size  Location     Type
   242 ;;                  1    wreg      void 
   243 ;; Registers used:
   244 ;;		wreg, status,2, status,0, pclath, cstack
   245 ;; Tracked objects:
   246 ;;		On entry : B00/0
   247 ;;		On exit  : 0/0
   248 ;;		Unchanged: 0/0
   249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   250 ;;      Params:         0       0       0       0       0
   251 ;;      Locals:         0       0       0       0       0
   252 ;;      Temps:          0       0       0       0       0
   253 ;;      Totals:         0       0       0       0       0
   254 ;;Total ram usage:        0 bytes
   255 ;; Hardware stack levels required when called:    2
   256 ;; This function calls:
   257 ;;		_Secuencia1
   258 ;;		_Secuencia2
   259 ;;		_Secuencia3
   260 ;;		_Secuencia4
   261 ;;		_cambio
   262 ;; This function is called by:
   263 ;;		Startup code after reset
   264 ;; This function uses a non-reentrant model
   265 ;;
   266                           
   267                           
   268                           ;psect for function _main
   269  04AA                     _main:	
   270                           
   271                           ;LedRotativo.c: 31: TRISB = 0;
   272                           
   273                           ;incstack = 0
   274                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   275  04AA  1683               	bsf	3,5	;RP0=1, select bank1
   276  04AB  1303               	bcf	3,6	;RP1=0, select bank1
   277  04AC  0186               	clrf	6	;volatile
   278                           
   279                           ;LedRotativo.c: 32: PORTB = 0;
   280  04AD  1283               	bcf	3,5	;RP0=0, select bank0
   281  04AE  1303               	bcf	3,6	;RP1=0, select bank0
   282  04AF  0186               	clrf	6	;volatile
   283                           
   284                           ;LedRotativo.c: 33: TRISC = 0b11111111;
   285  04B0  30FF               	movlw	255
   286  04B1  1683               	bsf	3,5	;RP0=1, select bank1
   287  04B2  1303               	bcf	3,6	;RP1=0, select bank1
   288  04B3  0087               	movwf	7	;volatile
   289                           
   290                           ;LedRotativo.c: 34: PORTC = 0;
   291  04B4  1283               	bcf	3,5	;RP0=0, select bank0
   292  04B5  1303               	bcf	3,6	;RP1=0, select bank0
   293  04B6  0187               	clrf	7	;volatile
   294  04B7                     l1114:	
   295                           ;LedRotativo.c: 35: while (1){
   296                           
   297                           
   298                           ;LedRotativo.c: 36: if(bandera == 0){
   299  04B7  0877               	movf	_bandera,w
   300  04B8  0478               	iorwf	_bandera+1,w
   301  04B9  1D03               	btfss	3,2
   302  04BA  2CC3               	goto	l55
   303                           
   304                           ;LedRotativo.c: 37: Secuencia1(0);
   305  04BB  3000               	movlw	0
   306  04BC  00F0               	movwf	Secuencia1@aux
   307  04BD  00F1               	movwf	Secuencia1@aux+1
   308  04BE  120A  118A  2619  120A  118A  	fcall	_Secuencia1
   309  04C3                     l55:	
   310                           
   311                           ;LedRotativo.c: 38: }
   312                           ;LedRotativo.c: 39: cambio();
   313  04C3  120A  118A  24F7  120A  118A  	fcall	_cambio
   314                           
   315                           ;LedRotativo.c: 40: if (bandera == 1)
   316  04C8  0377               	decf	_bandera,w
   317  04C9  0478               	iorwf	_bandera+1,w
   318  04CA  1D03               	btfss	3,2
   319  04CB  2CD6               	goto	l1122
   320                           
   321                           ;LedRotativo.c: 41: Secuencia1(1);
   322  04CC  3001               	movlw	1
   323  04CD  00F0               	movwf	Secuencia1@aux
   324  04CE  3000               	movlw	0
   325  04CF  00F1               	movwf	Secuencia1@aux+1
   326  04D0  120A  118A  2619  120A  118A  	fcall	_Secuencia1
   327  04D5  2CB7               	goto	l1114
   328  04D6                     l1122:	
   329                           
   330                           ;LedRotativo.c: 42: else if(bandera ==2)
   331  04D6  3002               	movlw	2
   332  04D7  0677               	xorwf	_bandera,w
   333  04D8  0478               	iorwf	_bandera+1,w
   334  04D9  1D03               	btfss	3,2
   335  04DA  2CE1               	goto	l1126
   336                           
   337                           ;LedRotativo.c: 43: Secuencia2();
   338  04DB  120A  118A  254D  120A  118A  	fcall	_Secuencia2
   339  04E0  2CB7               	goto	l1114
   340  04E1                     l1126:	
   341                           
   342                           ;LedRotativo.c: 44: else if(bandera ==3)
   343  04E1  3003               	movlw	3
   344  04E2  0677               	xorwf	_bandera,w
   345  04E3  0478               	iorwf	_bandera+1,w
   346  04E4  1D03               	btfss	3,2
   347  04E5  2CEC               	goto	l1130
   348                           
   349                           ;LedRotativo.c: 45: Secuencia3();
   350  04E6  120A  118A  25B3  120A  118A  	fcall	_Secuencia3
   351  04EB  2CB7               	goto	l1114
   352  04EC                     l1130:	
   353                           
   354                           ;LedRotativo.c: 46: else if(bandera ==4)
   355  04EC  3004               	movlw	4
   356  04ED  0677               	xorwf	_bandera,w
   357  04EE  0478               	iorwf	_bandera+1,w
   358  04EF  1D03               	btfss	3,2
   359  04F0  2CB7               	goto	l1114
   360                           
   361                           ;LedRotativo.c: 47: Secuencia4();
   362  04F1  120A  118A  2704  120A  118A  	fcall	_Secuencia4
   363  04F6  2CB7               	goto	l1114
   364  04F7                     __end_of_main:	
   365                           
   366                           	psect	text1
   367  0704                     __ptext1:	
   368 ;; *************** function _Secuencia4 *****************
   369 ;; Defined at:
   370 ;;		line 183 in file "LedRotativo.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;		None
   373 ;; Auto vars:     Size  Location     Type
   374 ;;		None
   375 ;; Return value:  Size  Location     Type
   376 ;;                  1    wreg      void 
   377 ;; Registers used:
   378 ;;		wreg, status,2, status,0, pclath, cstack
   379 ;; Tracked objects:
   380 ;;		On entry : 0/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   384 ;;      Params:         0       0       0       0       0
   385 ;;      Locals:         0       0       0       0       0
   386 ;;      Temps:          3       0       0       0       0
   387 ;;      Totals:         3       0       0       0       0
   388 ;;Total ram usage:        3 bytes
   389 ;; Hardware stack levels used:    1
   390 ;; Hardware stack levels required when called:    1
   391 ;; This function calls:
   392 ;;		_cambio
   393 ;; This function is called by:
   394 ;;		_main
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           
   399                           ;psect for function _Secuencia4
   400  0704                     _Secuencia4:	
   401                           
   402                           ;LedRotativo.c: 184: PORTB = 0B10000000;
   403                           
   404                           ;incstack = 0
   405                           ; Regs used in _Secuencia4: [wreg+status,2+status,0+pclath+cstack]
   406  0704  3080               	movlw	128
   407  0705  1283               	bcf	3,5	;RP0=0, select bank0
   408  0706  1303               	bcf	3,6	;RP1=0, select bank0
   409  0707  0086               	movwf	6	;volatile
   410                           
   411                           ;LedRotativo.c: 185: _delay((unsigned long)((500)*(4000000/4000.0)));
   412  0708  3003               	movlw	3
   413  0709  00F2               	movwf	??_Secuencia4+2
   414  070A  308A               	movlw	138
   415  070B  00F1               	movwf	??_Secuencia4+1
   416  070C  3055               	movlw	85
   417  070D  00F0               	movwf	??_Secuencia4
   418  070E                     u707:	
   419  070E  0BF0               	decfsz	??_Secuencia4,f
   420  070F  2F0E               	goto	u707
   421  0710  0BF1               	decfsz	??_Secuencia4+1,f
   422  0711  2F0E               	goto	u707
   423  0712  0BF2               	decfsz	??_Secuencia4+2,f
   424  0713  2F0E               	goto	u707
   425  0714  2F15               	nop2
   426                           
   427                           ;LedRotativo.c: 186: cambio();
   428  0715  120A  118A  24F7  120A  118A  	fcall	_cambio
   429                           
   430                           ;LedRotativo.c: 187: if(bandera != 4)
   431  071A  3004               	movlw	4
   432  071B  0677               	xorwf	_bandera,w
   433  071C  0478               	iorwf	_bandera+1,w
   434  071D  1D03               	btfss	3,2
   435  071E  0008               	return
   436                           
   437                           ;LedRotativo.c: 189: PORTB = 0B11000000;
   438                           
   439                           ;LedRotativo.c: 188: return;
   440  071F  30C0               	movlw	192
   441  0720  1283               	bcf	3,5	;RP0=0, select bank0
   442  0721  1303               	bcf	3,6	;RP1=0, select bank0
   443  0722  0086               	movwf	6	;volatile
   444                           
   445                           ;LedRotativo.c: 190: _delay((unsigned long)((500)*(4000000/4000.0)));
   446  0723  3003               	movlw	3
   447  0724  00F2               	movwf	??_Secuencia4+2
   448  0725  308A               	movlw	138
   449  0726  00F1               	movwf	??_Secuencia4+1
   450  0727  3055               	movlw	85
   451  0728  00F0               	movwf	??_Secuencia4
   452  0729                     u717:	
   453  0729  0BF0               	decfsz	??_Secuencia4,f
   454  072A  2F29               	goto	u717
   455  072B  0BF1               	decfsz	??_Secuencia4+1,f
   456  072C  2F29               	goto	u717
   457  072D  0BF2               	decfsz	??_Secuencia4+2,f
   458  072E  2F29               	goto	u717
   459  072F  2F30               	nop2
   460                           
   461                           ;LedRotativo.c: 191: cambio();
   462  0730  120A  118A  24F7  120A  118A  	fcall	_cambio
   463                           
   464                           ;LedRotativo.c: 192: if(bandera != 4)
   465  0735  3004               	movlw	4
   466  0736  0677               	xorwf	_bandera,w
   467  0737  0478               	iorwf	_bandera+1,w
   468  0738  1D03               	btfss	3,2
   469  0739  0008               	return
   470                           
   471                           ;LedRotativo.c: 194: PORTB = 0B11100000;
   472                           
   473                           ;LedRotativo.c: 193: return;
   474  073A  30E0               	movlw	224
   475  073B  1283               	bcf	3,5	;RP0=0, select bank0
   476  073C  1303               	bcf	3,6	;RP1=0, select bank0
   477  073D  0086               	movwf	6	;volatile
   478                           
   479                           ;LedRotativo.c: 195: _delay((unsigned long)((500)*(4000000/4000.0)));
   480  073E  3003               	movlw	3
   481  073F  00F2               	movwf	??_Secuencia4+2
   482  0740  308A               	movlw	138
   483  0741  00F1               	movwf	??_Secuencia4+1
   484  0742  3055               	movlw	85
   485  0743  00F0               	movwf	??_Secuencia4
   486  0744                     u727:	
   487  0744  0BF0               	decfsz	??_Secuencia4,f
   488  0745  2F44               	goto	u727
   489  0746  0BF1               	decfsz	??_Secuencia4+1,f
   490  0747  2F44               	goto	u727
   491  0748  0BF2               	decfsz	??_Secuencia4+2,f
   492  0749  2F44               	goto	u727
   493  074A  2F4B               	nop2
   494                           
   495                           ;LedRotativo.c: 196: cambio();
   496  074B  120A  118A  24F7  120A  118A  	fcall	_cambio
   497                           
   498                           ;LedRotativo.c: 197: if(bandera != 4)
   499  0750  3004               	movlw	4
   500  0751  0677               	xorwf	_bandera,w
   501  0752  0478               	iorwf	_bandera+1,w
   502  0753  1D03               	btfss	3,2
   503  0754  0008               	return
   504                           
   505                           ;LedRotativo.c: 199: PORTB = 0B11110000;
   506                           
   507                           ;LedRotativo.c: 198: return;
   508  0755  30F0               	movlw	240
   509  0756  1283               	bcf	3,5	;RP0=0, select bank0
   510  0757  1303               	bcf	3,6	;RP1=0, select bank0
   511  0758  0086               	movwf	6	;volatile
   512                           
   513                           ;LedRotativo.c: 200: _delay((unsigned long)((500)*(4000000/4000.0)));
   514  0759  3003               	movlw	3
   515  075A  00F2               	movwf	??_Secuencia4+2
   516  075B  308A               	movlw	138
   517  075C  00F1               	movwf	??_Secuencia4+1
   518  075D  3055               	movlw	85
   519  075E  00F0               	movwf	??_Secuencia4
   520  075F                     u737:	
   521  075F  0BF0               	decfsz	??_Secuencia4,f
   522  0760  2F5F               	goto	u737
   523  0761  0BF1               	decfsz	??_Secuencia4+1,f
   524  0762  2F5F               	goto	u737
   525  0763  0BF2               	decfsz	??_Secuencia4+2,f
   526  0764  2F5F               	goto	u737
   527  0765  2F66               	nop2
   528                           
   529                           ;LedRotativo.c: 201: cambio();
   530  0766  120A  118A  24F7  120A  118A  	fcall	_cambio
   531                           
   532                           ;LedRotativo.c: 202: if(bandera != 4)
   533  076B  3004               	movlw	4
   534  076C  0677               	xorwf	_bandera,w
   535  076D  0478               	iorwf	_bandera+1,w
   536  076E  1D03               	btfss	3,2
   537  076F  0008               	return
   538                           
   539                           ;LedRotativo.c: 204: PORTB = 0B11111000;
   540                           
   541                           ;LedRotativo.c: 203: return;
   542  0770  30F8               	movlw	248
   543  0771  1283               	bcf	3,5	;RP0=0, select bank0
   544  0772  1303               	bcf	3,6	;RP1=0, select bank0
   545  0773  0086               	movwf	6	;volatile
   546                           
   547                           ;LedRotativo.c: 205: _delay((unsigned long)((500)*(4000000/4000.0)));
   548  0774  3003               	movlw	3
   549  0775  00F2               	movwf	??_Secuencia4+2
   550  0776  308A               	movlw	138
   551  0777  00F1               	movwf	??_Secuencia4+1
   552  0778  3055               	movlw	85
   553  0779  00F0               	movwf	??_Secuencia4
   554  077A                     u747:	
   555  077A  0BF0               	decfsz	??_Secuencia4,f
   556  077B  2F7A               	goto	u747
   557  077C  0BF1               	decfsz	??_Secuencia4+1,f
   558  077D  2F7A               	goto	u747
   559  077E  0BF2               	decfsz	??_Secuencia4+2,f
   560  077F  2F7A               	goto	u747
   561  0780  2F81               	nop2
   562                           
   563                           ;LedRotativo.c: 206: cambio();
   564  0781  120A  118A  24F7  120A  118A  	fcall	_cambio
   565                           
   566                           ;LedRotativo.c: 207: if(bandera != 4)
   567  0786  3004               	movlw	4
   568  0787  0677               	xorwf	_bandera,w
   569  0788  0478               	iorwf	_bandera+1,w
   570  0789  1D03               	btfss	3,2
   571  078A  0008               	return
   572                           
   573                           ;LedRotativo.c: 209: PORTB = 0B11111100;
   574                           
   575                           ;LedRotativo.c: 208: return;
   576  078B  30FC               	movlw	252
   577  078C  1283               	bcf	3,5	;RP0=0, select bank0
   578  078D  1303               	bcf	3,6	;RP1=0, select bank0
   579  078E  0086               	movwf	6	;volatile
   580                           
   581                           ;LedRotativo.c: 210: _delay((unsigned long)((500)*(4000000/4000.0)));
   582  078F  3003               	movlw	3
   583  0790  00F2               	movwf	??_Secuencia4+2
   584  0791  308A               	movlw	138
   585  0792  00F1               	movwf	??_Secuencia4+1
   586  0793  3055               	movlw	85
   587  0794  00F0               	movwf	??_Secuencia4
   588  0795                     u757:	
   589  0795  0BF0               	decfsz	??_Secuencia4,f
   590  0796  2F95               	goto	u757
   591  0797  0BF1               	decfsz	??_Secuencia4+1,f
   592  0798  2F95               	goto	u757
   593  0799  0BF2               	decfsz	??_Secuencia4+2,f
   594  079A  2F95               	goto	u757
   595  079B  2F9C               	nop2
   596                           
   597                           ;LedRotativo.c: 211: cambio();
   598  079C  120A  118A  24F7  120A  118A  	fcall	_cambio
   599                           
   600                           ;LedRotativo.c: 212: if(bandera != 4)
   601  07A1  3004               	movlw	4
   602  07A2  0677               	xorwf	_bandera,w
   603  07A3  0478               	iorwf	_bandera+1,w
   604  07A4  1D03               	btfss	3,2
   605  07A5  0008               	return
   606                           
   607                           ;LedRotativo.c: 214: PORTB = 0B11111110;
   608                           
   609                           ;LedRotativo.c: 213: return;
   610  07A6  30FE               	movlw	254
   611  07A7  1283               	bcf	3,5	;RP0=0, select bank0
   612  07A8  1303               	bcf	3,6	;RP1=0, select bank0
   613  07A9  0086               	movwf	6	;volatile
   614                           
   615                           ;LedRotativo.c: 215: _delay((unsigned long)((500)*(4000000/4000.0)));
   616  07AA  3003               	movlw	3
   617  07AB  00F2               	movwf	??_Secuencia4+2
   618  07AC  308A               	movlw	138
   619  07AD  00F1               	movwf	??_Secuencia4+1
   620  07AE  3055               	movlw	85
   621  07AF  00F0               	movwf	??_Secuencia4
   622  07B0                     u767:	
   623  07B0  0BF0               	decfsz	??_Secuencia4,f
   624  07B1  2FB0               	goto	u767
   625  07B2  0BF1               	decfsz	??_Secuencia4+1,f
   626  07B3  2FB0               	goto	u767
   627  07B4  0BF2               	decfsz	??_Secuencia4+2,f
   628  07B5  2FB0               	goto	u767
   629  07B6  2FB7               	nop2
   630                           
   631                           ;LedRotativo.c: 216: cambio();
   632  07B7  120A  118A  24F7  120A  118A  	fcall	_cambio
   633                           
   634                           ;LedRotativo.c: 217: if(bandera != 4)
   635  07BC  3004               	movlw	4
   636  07BD  0677               	xorwf	_bandera,w
   637  07BE  0478               	iorwf	_bandera+1,w
   638  07BF  1D03               	btfss	3,2
   639  07C0  0008               	return
   640                           
   641                           ;LedRotativo.c: 219: PORTB = 0B11111111;
   642                           
   643                           ;LedRotativo.c: 218: return;
   644  07C1  30FF               	movlw	255
   645  07C2  1283               	bcf	3,5	;RP0=0, select bank0
   646  07C3  1303               	bcf	3,6	;RP1=0, select bank0
   647  07C4  0086               	movwf	6	;volatile
   648                           
   649                           ;LedRotativo.c: 220: _delay((unsigned long)((500)*(4000000/4000.0)));
   650  07C5  3003               	movlw	3
   651  07C6  00F2               	movwf	??_Secuencia4+2
   652  07C7  308A               	movlw	138
   653  07C8  00F1               	movwf	??_Secuencia4+1
   654  07C9  3055               	movlw	85
   655  07CA  00F0               	movwf	??_Secuencia4
   656  07CB                     u777:	
   657  07CB  0BF0               	decfsz	??_Secuencia4,f
   658  07CC  2FCB               	goto	u777
   659  07CD  0BF1               	decfsz	??_Secuencia4+1,f
   660  07CE  2FCB               	goto	u777
   661  07CF  0BF2               	decfsz	??_Secuencia4+2,f
   662  07D0  2FCB               	goto	u777
   663  07D1  2FD2               	nop2
   664                           
   665                           ;LedRotativo.c: 221: cambio();
   666  07D2  120A  118A  24F7  120A  118A  	fcall	_cambio
   667                           
   668                           ;LedRotativo.c: 222: if(bandera != 4)
   669  07D7  3004               	movlw	4
   670  07D8  0677               	xorwf	_bandera,w
   671  07D9  0478               	iorwf	_bandera+1,w
   672  07DA  1D03               	btfss	3,2
   673  07DB  0008               	return
   674                           
   675                           ;LedRotativo.c: 224: PORTB = 0B00000000;
   676                           
   677                           ;LedRotativo.c: 223: return;
   678  07DC  1283               	bcf	3,5	;RP0=0, select bank0
   679  07DD  1303               	bcf	3,6	;RP1=0, select bank0
   680  07DE  0186               	clrf	6	;volatile
   681                           
   682                           ;LedRotativo.c: 225: _delay((unsigned long)((500)*(4000000/4000.0)));
   683  07DF  3003               	movlw	3
   684  07E0  00F2               	movwf	??_Secuencia4+2
   685  07E1  308A               	movlw	138
   686  07E2  00F1               	movwf	??_Secuencia4+1
   687  07E3  3055               	movlw	85
   688  07E4  00F0               	movwf	??_Secuencia4
   689  07E5                     u787:	
   690  07E5  0BF0               	decfsz	??_Secuencia4,f
   691  07E6  2FE5               	goto	u787
   692  07E7  0BF1               	decfsz	??_Secuencia4+1,f
   693  07E8  2FE5               	goto	u787
   694  07E9  0BF2               	decfsz	??_Secuencia4+2,f
   695  07EA  2FE5               	goto	u787
   696  07EB  2FEC               	nop2
   697                           
   698                           ;LedRotativo.c: 226: cambio();
   699  07EC  120A  118A  24F7   	fcall	_cambio
   700                           
   701                           ;LedRotativo.c: 228: return;
   702  07EF  0008               	return
   703  07F0                     __end_of_Secuencia4:	
   704                           
   705                           	psect	text2
   706  05B3                     __ptext2:	
   707 ;; *************** function _Secuencia3 *****************
   708 ;; Defined at:
   709 ;;		line 159 in file "LedRotativo.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;		None
   712 ;; Auto vars:     Size  Location     Type
   713 ;;		None
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      void 
   716 ;; Registers used:
   717 ;;		wreg, status,2, status,0, pclath, cstack
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   723 ;;      Params:         0       0       0       0       0
   724 ;;      Locals:         0       0       0       0       0
   725 ;;      Temps:          3       0       0       0       0
   726 ;;      Totals:         3       0       0       0       0
   727 ;;Total ram usage:        3 bytes
   728 ;; Hardware stack levels used:    1
   729 ;; Hardware stack levels required when called:    1
   730 ;; This function calls:
   731 ;;		_cambio
   732 ;; This function is called by:
   733 ;;		_main
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           
   738                           ;psect for function _Secuencia3
   739  05B3                     _Secuencia3:	
   740                           
   741                           ;LedRotativo.c: 160: PORTB = 0B00011000;
   742                           
   743                           ;incstack = 0
   744                           ; Regs used in _Secuencia3: [wreg+status,2+status,0+pclath+cstack]
   745  05B3  3018               	movlw	24
   746  05B4  1283               	bcf	3,5	;RP0=0, select bank0
   747  05B5  1303               	bcf	3,6	;RP1=0, select bank0
   748  05B6  0086               	movwf	6	;volatile
   749                           
   750                           ;LedRotativo.c: 161: _delay((unsigned long)((500)*(4000000/4000.0)));
   751  05B7  3003               	movlw	3
   752  05B8  00F2               	movwf	??_Secuencia3+2
   753  05B9  308A               	movlw	138
   754  05BA  00F1               	movwf	??_Secuencia3+1
   755  05BB  3055               	movlw	85
   756  05BC  00F0               	movwf	??_Secuencia3
   757  05BD                     u797:	
   758  05BD  0BF0               	decfsz	??_Secuencia3,f
   759  05BE  2DBD               	goto	u797
   760  05BF  0BF1               	decfsz	??_Secuencia3+1,f
   761  05C0  2DBD               	goto	u797
   762  05C1  0BF2               	decfsz	??_Secuencia3+2,f
   763  05C2  2DBD               	goto	u797
   764  05C3  2DC4               	nop2
   765                           
   766                           ;LedRotativo.c: 162: cambio();
   767  05C4  120A  118A  24F7  120A  118A  	fcall	_cambio
   768                           
   769                           ;LedRotativo.c: 163: if(bandera != 3)
   770  05C9  3003               	movlw	3
   771  05CA  0677               	xorwf	_bandera,w
   772  05CB  0478               	iorwf	_bandera+1,w
   773  05CC  1D03               	btfss	3,2
   774  05CD  0008               	return
   775                           
   776                           ;LedRotativo.c: 165: PORTB = 0B00100100;
   777                           
   778                           ;LedRotativo.c: 164: return;
   779  05CE  3024               	movlw	36
   780  05CF  1283               	bcf	3,5	;RP0=0, select bank0
   781  05D0  1303               	bcf	3,6	;RP1=0, select bank0
   782  05D1  0086               	movwf	6	;volatile
   783                           
   784                           ;LedRotativo.c: 166: _delay((unsigned long)((500)*(4000000/4000.0)));
   785  05D2  3003               	movlw	3
   786  05D3  00F2               	movwf	??_Secuencia3+2
   787  05D4  308A               	movlw	138
   788  05D5  00F1               	movwf	??_Secuencia3+1
   789  05D6  3055               	movlw	85
   790  05D7  00F0               	movwf	??_Secuencia3
   791  05D8                     u807:	
   792  05D8  0BF0               	decfsz	??_Secuencia3,f
   793  05D9  2DD8               	goto	u807
   794  05DA  0BF1               	decfsz	??_Secuencia3+1,f
   795  05DB  2DD8               	goto	u807
   796  05DC  0BF2               	decfsz	??_Secuencia3+2,f
   797  05DD  2DD8               	goto	u807
   798  05DE  2DDF               	nop2
   799                           
   800                           ;LedRotativo.c: 167: cambio();
   801  05DF  120A  118A  24F7  120A  118A  	fcall	_cambio
   802                           
   803                           ;LedRotativo.c: 168: if(bandera != 3)
   804  05E4  3003               	movlw	3
   805  05E5  0677               	xorwf	_bandera,w
   806  05E6  0478               	iorwf	_bandera+1,w
   807  05E7  1D03               	btfss	3,2
   808  05E8  0008               	return
   809                           
   810                           ;LedRotativo.c: 170: PORTB = 0B01000010;
   811                           
   812                           ;LedRotativo.c: 169: return;
   813  05E9  3042               	movlw	66
   814  05EA  1283               	bcf	3,5	;RP0=0, select bank0
   815  05EB  1303               	bcf	3,6	;RP1=0, select bank0
   816  05EC  0086               	movwf	6	;volatile
   817                           
   818                           ;LedRotativo.c: 171: _delay((unsigned long)((500)*(4000000/4000.0)));
   819  05ED  3003               	movlw	3
   820  05EE  00F2               	movwf	??_Secuencia3+2
   821  05EF  308A               	movlw	138
   822  05F0  00F1               	movwf	??_Secuencia3+1
   823  05F1  3055               	movlw	85
   824  05F2  00F0               	movwf	??_Secuencia3
   825  05F3                     u817:	
   826  05F3  0BF0               	decfsz	??_Secuencia3,f
   827  05F4  2DF3               	goto	u817
   828  05F5  0BF1               	decfsz	??_Secuencia3+1,f
   829  05F6  2DF3               	goto	u817
   830  05F7  0BF2               	decfsz	??_Secuencia3+2,f
   831  05F8  2DF3               	goto	u817
   832  05F9  2DFA               	nop2
   833                           
   834                           ;LedRotativo.c: 172: cambio();
   835  05FA  120A  118A  24F7  120A  118A  	fcall	_cambio
   836                           
   837                           ;LedRotativo.c: 173: if(bandera != 3)
   838  05FF  3003               	movlw	3
   839  0600  0677               	xorwf	_bandera,w
   840  0601  0478               	iorwf	_bandera+1,w
   841  0602  1D03               	btfss	3,2
   842  0603  0008               	return
   843                           
   844                           ;LedRotativo.c: 175: PORTB = 0B10000001;
   845                           
   846                           ;LedRotativo.c: 174: return;
   847  0604  3081               	movlw	129
   848  0605  1283               	bcf	3,5	;RP0=0, select bank0
   849  0606  1303               	bcf	3,6	;RP1=0, select bank0
   850  0607  0086               	movwf	6	;volatile
   851                           
   852                           ;LedRotativo.c: 176: _delay((unsigned long)((500)*(4000000/4000.0)));
   853  0608  3003               	movlw	3
   854  0609  00F2               	movwf	??_Secuencia3+2
   855  060A  308A               	movlw	138
   856  060B  00F1               	movwf	??_Secuencia3+1
   857  060C  3055               	movlw	85
   858  060D  00F0               	movwf	??_Secuencia3
   859  060E                     u827:	
   860  060E  0BF0               	decfsz	??_Secuencia3,f
   861  060F  2E0E               	goto	u827
   862  0610  0BF1               	decfsz	??_Secuencia3+1,f
   863  0611  2E0E               	goto	u827
   864  0612  0BF2               	decfsz	??_Secuencia3+2,f
   865  0613  2E0E               	goto	u827
   866  0614  2E15               	nop2
   867                           
   868                           ;LedRotativo.c: 177: cambio();
   869  0615  120A  118A  24F7   	fcall	_cambio
   870                           
   871                           ;LedRotativo.c: 179: return;
   872  0618  0008               	return
   873  0619                     __end_of_Secuencia3:	
   874                           
   875                           	psect	text3
   876  054D                     __ptext3:	
   877 ;; *************** function _Secuencia2 *****************
   878 ;; Defined at:
   879 ;;		line 135 in file "LedRotativo.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;		None
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		wreg, status,2, status,0, pclath, cstack
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   893 ;;      Params:         0       0       0       0       0
   894 ;;      Locals:         0       0       0       0       0
   895 ;;      Temps:          3       0       0       0       0
   896 ;;      Totals:         3       0       0       0       0
   897 ;;Total ram usage:        3 bytes
   898 ;; Hardware stack levels used:    1
   899 ;; Hardware stack levels required when called:    1
   900 ;; This function calls:
   901 ;;		_cambio
   902 ;; This function is called by:
   903 ;;		_main
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           
   908                           ;psect for function _Secuencia2
   909  054D                     _Secuencia2:	
   910                           
   911                           ;LedRotativo.c: 136: PORTB = 0B10000001;
   912                           
   913                           ;incstack = 0
   914                           ; Regs used in _Secuencia2: [wreg+status,2+status,0+pclath+cstack]
   915  054D  3081               	movlw	129
   916  054E  1283               	bcf	3,5	;RP0=0, select bank0
   917  054F  1303               	bcf	3,6	;RP1=0, select bank0
   918  0550  0086               	movwf	6	;volatile
   919                           
   920                           ;LedRotativo.c: 137: _delay((unsigned long)((500)*(4000000/4000.0)));
   921  0551  3003               	movlw	3
   922  0552  00F2               	movwf	??_Secuencia2+2
   923  0553  308A               	movlw	138
   924  0554  00F1               	movwf	??_Secuencia2+1
   925  0555  3055               	movlw	85
   926  0556  00F0               	movwf	??_Secuencia2
   927  0557                     u837:	
   928  0557  0BF0               	decfsz	??_Secuencia2,f
   929  0558  2D57               	goto	u837
   930  0559  0BF1               	decfsz	??_Secuencia2+1,f
   931  055A  2D57               	goto	u837
   932  055B  0BF2               	decfsz	??_Secuencia2+2,f
   933  055C  2D57               	goto	u837
   934  055D  2D5E               	nop2
   935                           
   936                           ;LedRotativo.c: 138: cambio();
   937  055E  120A  118A  24F7  120A  118A  	fcall	_cambio
   938                           
   939                           ;LedRotativo.c: 139: if(bandera != 2)
   940  0563  3002               	movlw	2
   941  0564  0677               	xorwf	_bandera,w
   942  0565  0478               	iorwf	_bandera+1,w
   943  0566  1D03               	btfss	3,2
   944  0567  0008               	return
   945                           
   946                           ;LedRotativo.c: 141: PORTB = 0B01000010;
   947                           
   948                           ;LedRotativo.c: 140: return;
   949  0568  3042               	movlw	66
   950  0569  1283               	bcf	3,5	;RP0=0, select bank0
   951  056A  1303               	bcf	3,6	;RP1=0, select bank0
   952  056B  0086               	movwf	6	;volatile
   953                           
   954                           ;LedRotativo.c: 142: _delay((unsigned long)((500)*(4000000/4000.0)));
   955  056C  3003               	movlw	3
   956  056D  00F2               	movwf	??_Secuencia2+2
   957  056E  308A               	movlw	138
   958  056F  00F1               	movwf	??_Secuencia2+1
   959  0570  3055               	movlw	85
   960  0571  00F0               	movwf	??_Secuencia2
   961  0572                     u847:	
   962  0572  0BF0               	decfsz	??_Secuencia2,f
   963  0573  2D72               	goto	u847
   964  0574  0BF1               	decfsz	??_Secuencia2+1,f
   965  0575  2D72               	goto	u847
   966  0576  0BF2               	decfsz	??_Secuencia2+2,f
   967  0577  2D72               	goto	u847
   968  0578  2D79               	nop2
   969                           
   970                           ;LedRotativo.c: 143: cambio();
   971  0579  120A  118A  24F7  120A  118A  	fcall	_cambio
   972                           
   973                           ;LedRotativo.c: 144: if(bandera != 2)
   974  057E  3002               	movlw	2
   975  057F  0677               	xorwf	_bandera,w
   976  0580  0478               	iorwf	_bandera+1,w
   977  0581  1D03               	btfss	3,2
   978  0582  0008               	return
   979                           
   980                           ;LedRotativo.c: 146: PORTB = 0B00100100;
   981                           
   982                           ;LedRotativo.c: 145: return;
   983  0583  3024               	movlw	36
   984  0584  1283               	bcf	3,5	;RP0=0, select bank0
   985  0585  1303               	bcf	3,6	;RP1=0, select bank0
   986  0586  0086               	movwf	6	;volatile
   987                           
   988                           ;LedRotativo.c: 147: _delay((unsigned long)((500)*(4000000/4000.0)));
   989  0587  3003               	movlw	3
   990  0588  00F2               	movwf	??_Secuencia2+2
   991  0589  308A               	movlw	138
   992  058A  00F1               	movwf	??_Secuencia2+1
   993  058B  3055               	movlw	85
   994  058C  00F0               	movwf	??_Secuencia2
   995  058D                     u857:	
   996  058D  0BF0               	decfsz	??_Secuencia2,f
   997  058E  2D8D               	goto	u857
   998  058F  0BF1               	decfsz	??_Secuencia2+1,f
   999  0590  2D8D               	goto	u857
  1000  0591  0BF2               	decfsz	??_Secuencia2+2,f
  1001  0592  2D8D               	goto	u857
  1002  0593  2D94               	nop2
  1003                           
  1004                           ;LedRotativo.c: 148: cambio();
  1005  0594  120A  118A  24F7  120A  118A  	fcall	_cambio
  1006                           
  1007                           ;LedRotativo.c: 149: if(bandera != 2)
  1008  0599  3002               	movlw	2
  1009  059A  0677               	xorwf	_bandera,w
  1010  059B  0478               	iorwf	_bandera+1,w
  1011  059C  1D03               	btfss	3,2
  1012  059D  0008               	return
  1013                           
  1014                           ;LedRotativo.c: 151: PORTB = 0B00011000;
  1015                           
  1016                           ;LedRotativo.c: 150: return;
  1017  059E  3018               	movlw	24
  1018  059F  1283               	bcf	3,5	;RP0=0, select bank0
  1019  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  1020  05A1  0086               	movwf	6	;volatile
  1021                           
  1022                           ;LedRotativo.c: 152: _delay((unsigned long)((500)*(4000000/4000.0)));
  1023  05A2  3003               	movlw	3
  1024  05A3  00F2               	movwf	??_Secuencia2+2
  1025  05A4  308A               	movlw	138
  1026  05A5  00F1               	movwf	??_Secuencia2+1
  1027  05A6  3055               	movlw	85
  1028  05A7  00F0               	movwf	??_Secuencia2
  1029  05A8                     u867:	
  1030  05A8  0BF0               	decfsz	??_Secuencia2,f
  1031  05A9  2DA8               	goto	u867
  1032  05AA  0BF1               	decfsz	??_Secuencia2+1,f
  1033  05AB  2DA8               	goto	u867
  1034  05AC  0BF2               	decfsz	??_Secuencia2+2,f
  1035  05AD  2DA8               	goto	u867
  1036  05AE  2DAF               	nop2
  1037                           
  1038                           ;LedRotativo.c: 153: cambio();
  1039  05AF  120A  118A  24F7   	fcall	_cambio
  1040                           
  1041                           ;LedRotativo.c: 155: return;
  1042  05B2  0008               	return
  1043  05B3                     __end_of_Secuencia2:	
  1044                           
  1045                           	psect	text4
  1046  0619                     __ptext4:	
  1047 ;; *************** function _Secuencia1 *****************
  1048 ;; Defined at:
  1049 ;;		line 91 in file "LedRotativo.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;  aux             2    0[COMMON] int 
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;  band            2    5[COMMON] int 
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg, status,2, status,0, pclath, cstack
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1063 ;;      Params:         2       0       0       0       0
  1064 ;;      Locals:         2       0       0       0       0
  1065 ;;      Temps:          3       0       0       0       0
  1066 ;;      Totals:         7       0       0       0       0
  1067 ;;Total ram usage:        7 bytes
  1068 ;; Hardware stack levels used:    1
  1069 ;; Hardware stack levels required when called:    1
  1070 ;; This function calls:
  1071 ;;		_cambio
  1072 ;; This function is called by:
  1073 ;;		_main
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           
  1078                           ;psect for function _Secuencia1
  1079  0619                     _Secuencia1:	
  1080                           
  1081                           ;LedRotativo.c: 92: PORTB = 0B00000001;
  1082                           
  1083                           ;incstack = 0
  1084                           ; Regs used in _Secuencia1: [wreg+status,2+status,0+pclath+cstack]
  1085  0619  3001               	movlw	1
  1086  061A  1283               	bcf	3,5	;RP0=0, select bank0
  1087  061B  1303               	bcf	3,6	;RP1=0, select bank0
  1088  061C  0086               	movwf	6	;volatile
  1089                           
  1090                           ;LedRotativo.c: 93: _delay((unsigned long)((500)*(4000000/4000.0)));
  1091  061D  3003               	movlw	3
  1092  061E  00F4               	movwf	??_Secuencia1+2
  1093  061F  308A               	movlw	138
  1094  0620  00F3               	movwf	??_Secuencia1+1
  1095  0621  3055               	movlw	85
  1096  0622  00F2               	movwf	??_Secuencia1
  1097  0623                     u877:	
  1098  0623  0BF2               	decfsz	??_Secuencia1,f
  1099  0624  2E23               	goto	u877
  1100  0625  0BF3               	decfsz	??_Secuencia1+1,f
  1101  0626  2E23               	goto	u877
  1102  0627  0BF4               	decfsz	??_Secuencia1+2,f
  1103  0628  2E23               	goto	u877
  1104  0629  2E2A               	nop2
  1105                           
  1106                           ;LedRotativo.c: 94: int band = aux;
  1107  062A  0871               	movf	Secuencia1@aux+1,w
  1108  062B  00F6               	movwf	Secuencia1@band+1
  1109  062C  0870               	movf	Secuencia1@aux,w
  1110  062D  00F5               	movwf	Secuencia1@band
  1111                           
  1112                           ;LedRotativo.c: 95: cambio();
  1113  062E  120A  118A  24F7  120A  118A  	fcall	_cambio
  1114                           
  1115                           ;LedRotativo.c: 96: if(bandera != band)
  1116  0633  0876               	movf	Secuencia1@band+1,w
  1117  0634  0678               	xorwf	_bandera+1,w
  1118  0635  1D03               	skipz
  1119  0636  2E39               	goto	u445
  1120  0637  0875               	movf	Secuencia1@band,w
  1121  0638  0677               	xorwf	_bandera,w
  1122  0639                     u445:	
  1123  0639  1D03               	btfss	3,2
  1124  063A  0008               	return
  1125                           
  1126                           ;LedRotativo.c: 98: PORTB = 0B00000010;
  1127                           
  1128                           ;LedRotativo.c: 97: return;
  1129  063B  3002               	movlw	2
  1130  063C  1283               	bcf	3,5	;RP0=0, select bank0
  1131  063D  1303               	bcf	3,6	;RP1=0, select bank0
  1132  063E  0086               	movwf	6	;volatile
  1133                           
  1134                           ;LedRotativo.c: 99: _delay((unsigned long)((500)*(4000000/4000.0)));
  1135  063F  3003               	movlw	3
  1136  0640  00F4               	movwf	??_Secuencia1+2
  1137  0641  308A               	movlw	138
  1138  0642  00F3               	movwf	??_Secuencia1+1
  1139  0643  3055               	movlw	85
  1140  0644  00F2               	movwf	??_Secuencia1
  1141  0645                     u887:	
  1142  0645  0BF2               	decfsz	??_Secuencia1,f
  1143  0646  2E45               	goto	u887
  1144  0647  0BF3               	decfsz	??_Secuencia1+1,f
  1145  0648  2E45               	goto	u887
  1146  0649  0BF4               	decfsz	??_Secuencia1+2,f
  1147  064A  2E45               	goto	u887
  1148  064B  2E4C               	nop2
  1149                           
  1150                           ;LedRotativo.c: 100: cambio();
  1151  064C  120A  118A  24F7  120A  118A  	fcall	_cambio
  1152                           
  1153                           ;LedRotativo.c: 101: if(bandera != band)
  1154  0651  0876               	movf	Secuencia1@band+1,w
  1155  0652  0678               	xorwf	_bandera+1,w
  1156  0653  1D03               	skipz
  1157  0654  2E57               	goto	u455
  1158  0655  0875               	movf	Secuencia1@band,w
  1159  0656  0677               	xorwf	_bandera,w
  1160  0657                     u455:	
  1161  0657  1D03               	btfss	3,2
  1162  0658  0008               	return
  1163                           
  1164                           ;LedRotativo.c: 103: PORTB = 0B00000100;
  1165                           
  1166                           ;LedRotativo.c: 102: return;
  1167  0659  3004               	movlw	4
  1168  065A  1283               	bcf	3,5	;RP0=0, select bank0
  1169  065B  1303               	bcf	3,6	;RP1=0, select bank0
  1170  065C  0086               	movwf	6	;volatile
  1171                           
  1172                           ;LedRotativo.c: 104: _delay((unsigned long)((500)*(4000000/4000.0)));
  1173  065D  3003               	movlw	3
  1174  065E  00F4               	movwf	??_Secuencia1+2
  1175  065F  308A               	movlw	138
  1176  0660  00F3               	movwf	??_Secuencia1+1
  1177  0661  3055               	movlw	85
  1178  0662  00F2               	movwf	??_Secuencia1
  1179  0663                     u897:	
  1180  0663  0BF2               	decfsz	??_Secuencia1,f
  1181  0664  2E63               	goto	u897
  1182  0665  0BF3               	decfsz	??_Secuencia1+1,f
  1183  0666  2E63               	goto	u897
  1184  0667  0BF4               	decfsz	??_Secuencia1+2,f
  1185  0668  2E63               	goto	u897
  1186  0669  2E6A               	nop2
  1187                           
  1188                           ;LedRotativo.c: 105: cambio();
  1189  066A  120A  118A  24F7  120A  118A  	fcall	_cambio
  1190                           
  1191                           ;LedRotativo.c: 106: if(bandera != band)
  1192  066F  0876               	movf	Secuencia1@band+1,w
  1193  0670  0678               	xorwf	_bandera+1,w
  1194  0671  1D03               	skipz
  1195  0672  2E75               	goto	u465
  1196  0673  0875               	movf	Secuencia1@band,w
  1197  0674  0677               	xorwf	_bandera,w
  1198  0675                     u465:	
  1199  0675  1D03               	btfss	3,2
  1200  0676  0008               	return
  1201                           
  1202                           ;LedRotativo.c: 108: PORTB = 0B00001000;
  1203                           
  1204                           ;LedRotativo.c: 107: return;
  1205  0677  3008               	movlw	8
  1206  0678  1283               	bcf	3,5	;RP0=0, select bank0
  1207  0679  1303               	bcf	3,6	;RP1=0, select bank0
  1208  067A  0086               	movwf	6	;volatile
  1209                           
  1210                           ;LedRotativo.c: 109: _delay((unsigned long)((500)*(4000000/4000.0)));
  1211  067B  3003               	movlw	3
  1212  067C  00F4               	movwf	??_Secuencia1+2
  1213  067D  308A               	movlw	138
  1214  067E  00F3               	movwf	??_Secuencia1+1
  1215  067F  3055               	movlw	85
  1216  0680  00F2               	movwf	??_Secuencia1
  1217  0681                     u907:	
  1218  0681  0BF2               	decfsz	??_Secuencia1,f
  1219  0682  2E81               	goto	u907
  1220  0683  0BF3               	decfsz	??_Secuencia1+1,f
  1221  0684  2E81               	goto	u907
  1222  0685  0BF4               	decfsz	??_Secuencia1+2,f
  1223  0686  2E81               	goto	u907
  1224  0687  2E88               	nop2
  1225                           
  1226                           ;LedRotativo.c: 110: cambio();
  1227  0688  120A  118A  24F7  120A  118A  	fcall	_cambio
  1228                           
  1229                           ;LedRotativo.c: 111: if(bandera != band)
  1230  068D  0876               	movf	Secuencia1@band+1,w
  1231  068E  0678               	xorwf	_bandera+1,w
  1232  068F  1D03               	skipz
  1233  0690  2E93               	goto	u475
  1234  0691  0875               	movf	Secuencia1@band,w
  1235  0692  0677               	xorwf	_bandera,w
  1236  0693                     u475:	
  1237  0693  1D03               	btfss	3,2
  1238  0694  0008               	return
  1239                           
  1240                           ;LedRotativo.c: 113: PORTB = 0B00010000;
  1241                           
  1242                           ;LedRotativo.c: 112: return;
  1243  0695  3010               	movlw	16
  1244  0696  1283               	bcf	3,5	;RP0=0, select bank0
  1245  0697  1303               	bcf	3,6	;RP1=0, select bank0
  1246  0698  0086               	movwf	6	;volatile
  1247                           
  1248                           ;LedRotativo.c: 114: _delay((unsigned long)((500)*(4000000/4000.0)));
  1249  0699  3003               	movlw	3
  1250  069A  00F4               	movwf	??_Secuencia1+2
  1251  069B  308A               	movlw	138
  1252  069C  00F3               	movwf	??_Secuencia1+1
  1253  069D  3055               	movlw	85
  1254  069E  00F2               	movwf	??_Secuencia1
  1255  069F                     u917:	
  1256  069F  0BF2               	decfsz	??_Secuencia1,f
  1257  06A0  2E9F               	goto	u917
  1258  06A1  0BF3               	decfsz	??_Secuencia1+1,f
  1259  06A2  2E9F               	goto	u917
  1260  06A3  0BF4               	decfsz	??_Secuencia1+2,f
  1261  06A4  2E9F               	goto	u917
  1262  06A5  2EA6               	nop2
  1263                           
  1264                           ;LedRotativo.c: 115: cambio();
  1265  06A6  120A  118A  24F7  120A  118A  	fcall	_cambio
  1266                           
  1267                           ;LedRotativo.c: 116: if(bandera != band)
  1268  06AB  0876               	movf	Secuencia1@band+1,w
  1269  06AC  0678               	xorwf	_bandera+1,w
  1270  06AD  1D03               	skipz
  1271  06AE  2EB1               	goto	u485
  1272  06AF  0875               	movf	Secuencia1@band,w
  1273  06B0  0677               	xorwf	_bandera,w
  1274  06B1                     u485:	
  1275  06B1  1D03               	btfss	3,2
  1276  06B2  0008               	return
  1277                           
  1278                           ;LedRotativo.c: 118: PORTB = 0B00100000;
  1279                           
  1280                           ;LedRotativo.c: 117: return;
  1281  06B3  3020               	movlw	32
  1282  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  1283  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  1284  06B6  0086               	movwf	6	;volatile
  1285                           
  1286                           ;LedRotativo.c: 119: _delay((unsigned long)((500)*(4000000/4000.0)));
  1287  06B7  3003               	movlw	3
  1288  06B8  00F4               	movwf	??_Secuencia1+2
  1289  06B9  308A               	movlw	138
  1290  06BA  00F3               	movwf	??_Secuencia1+1
  1291  06BB  3055               	movlw	85
  1292  06BC  00F2               	movwf	??_Secuencia1
  1293  06BD                     u927:	
  1294  06BD  0BF2               	decfsz	??_Secuencia1,f
  1295  06BE  2EBD               	goto	u927
  1296  06BF  0BF3               	decfsz	??_Secuencia1+1,f
  1297  06C0  2EBD               	goto	u927
  1298  06C1  0BF4               	decfsz	??_Secuencia1+2,f
  1299  06C2  2EBD               	goto	u927
  1300  06C3  2EC4               	nop2
  1301                           
  1302                           ;LedRotativo.c: 120: cambio();
  1303  06C4  120A  118A  24F7  120A  118A  	fcall	_cambio
  1304                           
  1305                           ;LedRotativo.c: 121: if(bandera != band)
  1306  06C9  0876               	movf	Secuencia1@band+1,w
  1307  06CA  0678               	xorwf	_bandera+1,w
  1308  06CB  1D03               	skipz
  1309  06CC  2ECF               	goto	u495
  1310  06CD  0875               	movf	Secuencia1@band,w
  1311  06CE  0677               	xorwf	_bandera,w
  1312  06CF                     u495:	
  1313  06CF  1D03               	btfss	3,2
  1314  06D0  0008               	return
  1315                           
  1316                           ;LedRotativo.c: 123: PORTB = 0B01000000;
  1317                           
  1318                           ;LedRotativo.c: 122: return;
  1319  06D1  3040               	movlw	64
  1320  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1321  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1322  06D4  0086               	movwf	6	;volatile
  1323                           
  1324                           ;LedRotativo.c: 124: _delay((unsigned long)((500)*(4000000/4000.0)));
  1325  06D5  3003               	movlw	3
  1326  06D6  00F4               	movwf	??_Secuencia1+2
  1327  06D7  308A               	movlw	138
  1328  06D8  00F3               	movwf	??_Secuencia1+1
  1329  06D9  3055               	movlw	85
  1330  06DA  00F2               	movwf	??_Secuencia1
  1331  06DB                     u937:	
  1332  06DB  0BF2               	decfsz	??_Secuencia1,f
  1333  06DC  2EDB               	goto	u937
  1334  06DD  0BF3               	decfsz	??_Secuencia1+1,f
  1335  06DE  2EDB               	goto	u937
  1336  06DF  0BF4               	decfsz	??_Secuencia1+2,f
  1337  06E0  2EDB               	goto	u937
  1338  06E1  2EE2               	nop2
  1339                           
  1340                           ;LedRotativo.c: 125: cambio();
  1341  06E2  120A  118A  24F7  120A  118A  	fcall	_cambio
  1342                           
  1343                           ;LedRotativo.c: 126: if(bandera != band)
  1344  06E7  0876               	movf	Secuencia1@band+1,w
  1345  06E8  0678               	xorwf	_bandera+1,w
  1346  06E9  1D03               	skipz
  1347  06EA  2EED               	goto	u505
  1348  06EB  0875               	movf	Secuencia1@band,w
  1349  06EC  0677               	xorwf	_bandera,w
  1350  06ED                     u505:	
  1351  06ED  1D03               	btfss	3,2
  1352  06EE  0008               	return
  1353                           
  1354                           ;LedRotativo.c: 128: PORTB = 0B10000000;
  1355                           
  1356                           ;LedRotativo.c: 127: return;
  1357  06EF  3080               	movlw	128
  1358  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  1359  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  1360  06F2  0086               	movwf	6	;volatile
  1361                           
  1362                           ;LedRotativo.c: 129: _delay((unsigned long)((500)*(4000000/4000.0)));
  1363  06F3  3003               	movlw	3
  1364  06F4  00F4               	movwf	??_Secuencia1+2
  1365  06F5  308A               	movlw	138
  1366  06F6  00F3               	movwf	??_Secuencia1+1
  1367  06F7  3055               	movlw	85
  1368  06F8  00F2               	movwf	??_Secuencia1
  1369  06F9                     u947:	
  1370  06F9  0BF2               	decfsz	??_Secuencia1,f
  1371  06FA  2EF9               	goto	u947
  1372  06FB  0BF3               	decfsz	??_Secuencia1+1,f
  1373  06FC  2EF9               	goto	u947
  1374  06FD  0BF4               	decfsz	??_Secuencia1+2,f
  1375  06FE  2EF9               	goto	u947
  1376  06FF  2F00               	nop2
  1377                           
  1378                           ;LedRotativo.c: 130: cambio();
  1379  0700  120A  118A  24F7   	fcall	_cambio
  1380                           
  1381                           ;LedRotativo.c: 132: return;
  1382  0703  0008               	return
  1383  0704                     __end_of_Secuencia1:	
  1384                           
  1385                           	psect	text5
  1386  04F7                     __ptext5:	
  1387 ;; *************** function _cambio *****************
  1388 ;; Defined at:
  1389 ;;		line 52 in file "LedRotativo.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;		None
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;		None
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      void 
  1396 ;; Registers used:
  1397 ;;		wreg, status,2, status,0
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1403 ;;      Params:         0       0       0       0       0
  1404 ;;      Locals:         0       0       0       0       0
  1405 ;;      Temps:          0       0       0       0       0
  1406 ;;      Totals:         0       0       0       0       0
  1407 ;;Total ram usage:        0 bytes
  1408 ;; Hardware stack levels used:    1
  1409 ;; This function calls:
  1410 ;;		Nothing
  1411 ;; This function is called by:
  1412 ;;		_main
  1413 ;;		_Secuencia1
  1414 ;;		_Secuencia2
  1415 ;;		_Secuencia3
  1416 ;;		_Secuencia4
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           
  1421                           ;psect for function _cambio
  1422  04F7                     _cambio:	
  1423                           
  1424                           ;LedRotativo.c: 53: if (PORTCbits.RC0 == 1){
  1425                           
  1426                           ;incstack = 0
  1427                           ; Regs used in _cambio: [wreg+status,2+status,0]
  1428  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  1429  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  1430  04F9  1C07               	btfss	7,0	;volatile
  1431  04FA  2D02               	goto	l68
  1432                           
  1433                           ;LedRotativo.c: 54: boton1 = 1;
  1434  04FB  3001               	movlw	1
  1435  04FC  00FB               	movwf	_boton1
  1436  04FD  3000               	movlw	0
  1437  04FE  00FC               	movwf	_boton1+1
  1438                           
  1439                           ;LedRotativo.c: 55: boton2 = 0;
  1440  04FF  01F9               	clrf	_boton2
  1441  0500  01FA               	clrf	_boton2+1
  1442  0501  2D0A               	goto	L1
  1443  0502                     l68:	
  1444                           ;LedRotativo.c: 58: }
  1445                           
  1446                           ;LedRotativo.c: 57: boton4 = 0;
  1447                           
  1448                           ;LedRotativo.c: 56: boton3 = 0;
  1449                           
  1450                           
  1451                           ;LedRotativo.c: 59: else if (PORTCbits.RC1 == 1){
  1452  0502  1C87               	btfss	7,1	;volatile
  1453  0503  2D0D               	goto	l70
  1454                           
  1455                           ;LedRotativo.c: 60: boton1 = 0;
  1456  0504  01FB               	clrf	_boton1
  1457  0505  01FC               	clrf	_boton1+1
  1458                           
  1459                           ;LedRotativo.c: 61: boton2 = 1;
  1460  0506  3001               	movlw	1
  1461  0507  00F9               	movwf	_boton2
  1462  0508  3000               	movlw	0
  1463  0509  00FA               	movwf	_boton2+1
  1464  050A                     L1:	
  1465                           
  1466                           ;LedRotativo.c: 62: boton3 = 0;
  1467  050A  01A2               	clrf	_boton3
  1468  050B  01A3               	clrf	_boton3+1
  1469  050C  2D17               	goto	l882
  1470  050D                     l70:	
  1471                           ;LedRotativo.c: 65: }
  1472                           
  1473                           ;LedRotativo.c: 63: boton4 = 0;
  1474                           
  1475                           
  1476                           ;LedRotativo.c: 66: else if (PORTCbits.RC2 == 1){
  1477  050D  1D07               	btfss	7,2	;volatile
  1478  050E  2D1A               	goto	l72
  1479                           
  1480                           ;LedRotativo.c: 67: boton1 = 0;
  1481  050F  01FB               	clrf	_boton1
  1482  0510  01FC               	clrf	_boton1+1
  1483                           
  1484                           ;LedRotativo.c: 68: boton2 = 0;
  1485  0511  01F9               	clrf	_boton2
  1486  0512  01FA               	clrf	_boton2+1
  1487                           
  1488                           ;LedRotativo.c: 69: boton3 = 1;
  1489  0513  3001               	movlw	1
  1490  0514  00A2               	movwf	_boton3
  1491  0515  3000               	movlw	0
  1492  0516  00A3               	movwf	_boton3+1
  1493  0517                     l882:	
  1494                           
  1495                           ;LedRotativo.c: 70: boton4 = 0;
  1496  0517  01A0               	clrf	_boton4
  1497  0518  01A1               	clrf	_boton4+1
  1498                           
  1499                           ;LedRotativo.c: 72: }
  1500  0519  2D26               	goto	l888
  1501  051A                     l72:	
  1502                           
  1503                           ;LedRotativo.c: 73: else if (PORTCbits.RC3 == 1){
  1504  051A  1D87               	btfss	7,3	;volatile
  1505  051B  2D26               	goto	l888
  1506                           
  1507                           ;LedRotativo.c: 74: boton1 = 0;
  1508  051C  01FB               	clrf	_boton1
  1509  051D  01FC               	clrf	_boton1+1
  1510                           
  1511                           ;LedRotativo.c: 75: boton2 = 0;
  1512  051E  01F9               	clrf	_boton2
  1513  051F  01FA               	clrf	_boton2+1
  1514                           
  1515                           ;LedRotativo.c: 76: boton3 = 0;
  1516  0520  01A2               	clrf	_boton3
  1517  0521  01A3               	clrf	_boton3+1
  1518                           
  1519                           ;LedRotativo.c: 77: boton4 = 1;
  1520  0522  3001               	movlw	1
  1521  0523  00A0               	movwf	_boton4
  1522  0524  3000               	movlw	0
  1523  0525  00A1               	movwf	_boton4+1
  1524  0526                     l888:	
  1525                           
  1526                           ;LedRotativo.c: 78: }
  1527                           ;LedRotativo.c: 80: if (boton1 == 1)
  1528  0526  037B               	decf	_boton1,w
  1529  0527  047C               	iorwf	_boton1+1,w
  1530  0528  1D03               	btfss	3,2
  1531  0529  2D2F               	goto	l892
  1532                           
  1533                           ;LedRotativo.c: 81: bandera = 1;
  1534  052A  3001               	movlw	1
  1535  052B  00F7               	movwf	_bandera
  1536  052C  3000               	movlw	0
  1537  052D  00F8               	movwf	_bandera+1
  1538  052E  0008               	return
  1539  052F                     l892:	
  1540                           
  1541                           ;LedRotativo.c: 82: else if (boton2 == 1)
  1542  052F  0379               	decf	_boton2,w
  1543  0530  047A               	iorwf	_boton2+1,w
  1544  0531  1D03               	btfss	3,2
  1545  0532  2D38               	goto	l896
  1546                           
  1547                           ;LedRotativo.c: 83: bandera = 2;
  1548  0533  3002               	movlw	2
  1549  0534  00F7               	movwf	_bandera
  1550  0535  3000               	movlw	0
  1551  0536  00F8               	movwf	_bandera+1
  1552  0537  0008               	return
  1553  0538                     l896:	
  1554                           
  1555                           ;LedRotativo.c: 84: else if (boton3 == 1 )
  1556  0538  0322               	decf	_boton3,w
  1557  0539  0423               	iorwf	_boton3+1,w
  1558  053A  1D03               	btfss	3,2
  1559  053B  2D41               	goto	l900
  1560                           
  1561                           ;LedRotativo.c: 85: bandera = 3;
  1562  053C  3003               	movlw	3
  1563  053D  00F7               	movwf	_bandera
  1564  053E  3000               	movlw	0
  1565  053F  00F8               	movwf	_bandera+1
  1566  0540  0008               	return
  1567  0541                     l900:	
  1568                           
  1569                           ;LedRotativo.c: 86: else if (boton4 == 1)
  1570  0541  0320               	decf	_boton4,w
  1571  0542  0421               	iorwf	_boton4+1,w
  1572  0543  1D03               	btfss	3,2
  1573  0544  2D4A               	goto	l904
  1574                           
  1575                           ;LedRotativo.c: 87: bandera = 4;
  1576  0545  3004               	movlw	4
  1577  0546  00F7               	movwf	_bandera
  1578  0547  3000               	movlw	0
  1579  0548  00F8               	movwf	_bandera+1
  1580  0549  0008               	return
  1581  054A                     l904:	
  1582                           
  1583                           ;LedRotativo.c: 88: else
  1584                           ;LedRotativo.c: 89: bandera = 0;
  1585  054A  01F7               	clrf	_bandera
  1586  054B  01F8               	clrf	_bandera+1
  1587  054C  0008               	return
  1588  054D                     __end_of_cambio:	
  1589  007E                     btemp	set	126	;btemp
  1590  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80      0       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Secuencia1

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     305
                         _Secuencia1
                         _Secuencia2
                         _Secuencia3
                         _Secuencia4
                             _cambio
 ---------------------------------------------------------------------------------
 (1) _Secuencia4                                           3     3      0       0
                                              0 COMMON     3     3      0
                             _cambio
 ---------------------------------------------------------------------------------
 (1) _Secuencia3                                           3     3      0       0
                                              0 COMMON     3     3      0
                             _cambio
 ---------------------------------------------------------------------------------
 (1) _Secuencia2                                           3     3      0       0
                                              0 COMMON     3     3      0
                             _cambio
 ---------------------------------------------------------------------------------
 (1) _Secuencia1                                           7     5      2     305
                                              0 COMMON     7     5      2
                             _cambio
 ---------------------------------------------------------------------------------
 (1) _cambio                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Secuencia1
     _cambio
   _Secuencia2
     _cambio
   _Secuencia3
     _cambio
   _Secuencia4
     _cambio
   _cambio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      11       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      11      12        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sat Sep 02 22:45:36 2017

                     l70 050D                       l55 04C3                       l72 051A  
                     l68 0502                      l900 0541                      l904 054A  
                    l882 0517                      l892 052F                      l896 0538  
                    l888 0526                      u505 06ED                      u445 0639  
                    u455 0657                      u465 0675                      u475 0693  
                    u707 070E                      u485 06B1                      u717 0729  
                    u495 06CF                      u807 05D8                      u727 0744  
                    u817 05F3                      u737 075F                      u907 0681  
                    u827 060E                      u747 077A                      u917 069F  
                    u837 0557                      u757 0795                      u927 06BD  
                    u847 0572                      u767 07B0                      u937 06DB  
                    u857 058D                      u777 07CB                      u947 06F9  
                    u867 05A8                      u787 07E5                      u877 0623  
                    u797 05BD                      u887 0645                      u897 0663  
                   l1130 04EC                     l1122 04D6                     l1114 04B7  
                   l1126 04E1                     _main 04AA                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTB 0006  
                  _PORTC 0007                    _TRISB 0086                    _TRISC 0087  
                  _TXREG 0019                    status 0003                    wtemp0 007E  
        __initialization 07F0             __end_of_main 04F7            Secuencia1@aux 0070  
                 ??_main 0077               _Secuencia1 0619               _Secuencia2 054D  
             _Secuencia3 05B3               _Secuencia4 0704                   _cambio 04F7  
                 _boton1 007B                   _boton2 0079                   _boton3 0022  
                 _boton4 0020  __end_of__initialization 07FC           __pcstackCOMMON 0070  
         Secuencia1@band 0075               __pbssBANK0 0020              ?_Secuencia1 0070  
            ?_Secuencia2 0070              ?_Secuencia3 0070              ?_Secuencia4 0070  
             __pmaintext 04AA                  ?_cambio 0070          __size_of_cambio 0056  
                _bandera 0077      __size_of_Secuencia1 00EB      __size_of_Secuencia2 0066  
    __size_of_Secuencia3 0066      __size_of_Secuencia4 00EC                  __ptext1 0704  
                __ptext2 05B3                  __ptext3 054D                  __ptext4 0619  
                __ptext5 04F7     end_of_initialization 07FC                _RCSTAbits 0018  
              _PORTCbits 0007                _TXSTAbits 0098           __end_of_cambio 054D  
    start_initialization 07F0             ??_Secuencia1 0072             ??_Secuencia2 0070  
           ??_Secuencia3 0070             ??_Secuencia4 0070                 ??_cambio 0070  
     __end_of_Secuencia1 0704       __end_of_Secuencia2 05B3       __end_of_Secuencia3 0619  
     __end_of_Secuencia4 07F0              __pbssCOMMON 0077                ___latbits 0002  
               _PIR1bits 000C            __size_of_main 004D  
